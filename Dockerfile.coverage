ARG base_tag=latest
FROM ghcr.io/testillano/h2agent_builder:${base_tag}
MAINTAINER testillano

LABEL testillano.h2agent.description="Docker image for h2agent coverage"

ARG os_type=ubuntu
RUN if [ "${os_type}" = "alpine" ] ; then apk update && apk add lcov bc --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ && rm -rf /var/cache/apk/* ; elif [ "${os_type}" = "ubuntu" ] ; then apt-get update && apt-get install -y lcov bc && apt-get clean ; fi

COPY . /code
WORKDIR /code

ARG make_procs=4

# We could duplicate from local build directory, but prefer to build from scratch:
RUN cmake -DCMAKE_BUILD_TYPE=Debug . && make -j${make_procs}

# Exclusions provided on $@:
RUN printf %b "#!/bin/sh\n\
cd /code\n\
CAPTURE_OPTS=\"--ignore-errors empty --ignore-errors inconsistent --ignore-errors inconsistent,inconsistent --ignore-errors mismatch --ignore-errors mismatch,mismatch\"\n\
lcov --capture --directory ./src --directory ./ut --directory ./tools --initial --output-file base-coverage.info \${CAPTURE_OPTS}\n\
/code/build/Debug/bin/unit-test\n\
lcov --capture --directory ./src --directory ./ut --directory ./tools --output-file test-coverage.info --ignore-errors gcov,gcov \${CAPTURE_OPTS}\n\
lcov -a base-coverage.info -a test-coverage.info -o total-coverage.info\n\
\n\
lcov --extract total-coverage.info '/code/src/*' --output-file extracted-coverage.info\n\
lcov --remove extracted-coverage.info 'main.cpp' '*/MyTrafficHttp2Client*' '*/AdminClientProvision*' --output-file final-coverage.info\n\
\n\
genhtml final-coverage.info --output-directory coverage\n\
cp final-coverage.info coverage/lcov.info" > /var/coverage.sh

RUN chmod a+x /var/coverage.sh

ENTRYPOINT ["/bin/sh", "/var/coverage.sh"]
CMD []
